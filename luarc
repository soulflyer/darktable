local dt = require "darktable"
require "/Users/iain/Code/Lua/lua-scripts/contrib/quicktag"

local divecentre = dt.new_widget("entry")
{
    text = "Alpha",
    placeholder = "placeholder",
    editable = true,
    tooltip = "Set to 'none' to use the soulflyer intro pic",
    reset_callback = function(self) self.text = "Alpha" end
}

local filename = dt.new_widget ("entry")
{
   text = "test",
   placeholder = "placeholder",
   editable = true,
   tooltip = "Typically 'yymmdd-projectname'",
   reset_callback = function (self) self.text = "test" end
}

local divecentre_label = dt.new_widget ("label")
{
   label = "divecentre"
}

local filename_label = dt.new_widget ("label")
{
   label = "filename"
}

dt.register_lib(
  "exportJSONModule",     -- Module name
  "export JSON",     -- name
  true,                -- expandable
  true,               -- resetable
  {[dt.gui.views.lighttable] = {"DT_UI_CONTAINER_PANEL_RIGHT_CENTER", 100}},   -- containers
  dt.new_widget("box") -- widget
  {
    orientation = "vertical",
    divecentre_label,
    divecentre,
    filename_label,
    filename,
    dt.new_widget("button")
    {
      label = "Export",
      clicked_callback = function ()
         local images = dt.gui.action_images
         local t ={}
         for _,v in ipairs(images) do
            --s=(tostring (v))
            s=(string.match (tostring (v), "%d%d%d%d%/%d%d/.+"))
            s=(string.gsub (s, "CR2", "jpg"))
            s=(string.gsub (s, "NEF", "jpg"))
            s=(string.gsub (s, "JPG", "jpg"))
            if (string.match (s, "%.gif"))
            then
               table.insert (t, 1, s)
            else
               t [#t+1]=s
            end
         end
         os.execute ("build-json -d \""
                        .. divecentre.text
                        .. "\" -l \""
                        .. (table.concat (t, " "))
                        .. "\" "
                        .. filename.text)
         dt.print ("Exported json file " .. filename.text .. " for " .. divecentre.text)
      end
    }
  },
  nil,-- view_enter
  nil -- view_leave
)


local function add_tag_filter (tag_name)
   -- Selects all the pics with the given tag plus any labelled red
   local newrule = dt.gui.libs.collect.new_rule ()
   newrule.mode = "DT_LIB_COLLECT_MODE_AND"
   newrule.data = tag_name
   newrule.item = "DT_COLLECTION_PROP_TAG"

   local filters = dt.gui.libs.collect.filter ({})
   local first = filters [1]
   local rollrule = dt.gui.libs.collect.new_rule ()
   rollrule.mode = "DT_LIB_COLLECT_MODE_OR"
   rollrule.data = first.data
   rollrule.item = first.item

   local redrule = dt.gui.libs.collect.new_rule ()
   redrule.mode = "DT_LIB_COLLECT_MODE_AND"
   redrule.data = "red"
   redrule.item = "DT_COLLECTION_PROP_COLORLABEL"

   filters = {}
   table.insert (filters, first)
   table.insert (filters, newrule)
   table.insert (filters, rollrule)
   table.insert (filters, redrule)
   dt.gui.libs.collect.filter (filters)
end

local function show_filters ()
   -- Development purposes, just to get a looka t what filters are applied
   local filters = dt.gui.libs.collect.filter ({})
   local first = filters [1]
   if first.item == "DT_COLLECTION_PROP_FILMROLL" then
      print ("first: " ..  first.data)
   else
      print ("Not a film roll")
   end
   for x,filter in ipairs (filters) do
      print (x .. " " .. filter.data .. " " .. filter.mode .. " " .. filter.item )
   end
   dt.gui.libs.collect.filter (filters)
end

dt.register_event ("shortcut",
                   function (event,shortcut)
                      show_filters ()
                   end,
                   "Show filters")

local function select_tag(tag_name)
   local selection = {}
   for _,image in ipairs (dt.database) do
      tags=dt.tags.get_tags (image)
      for _,tag in ipairs (tags) do
         if tostring (tag) == tag_name then
            table.insert (selection, image)
            break
         end
      end
   end
   dt.gui.selection (selection)
end

dt.register_event ("shortcut",
                   function (event,shortcut)
                      -- This needs to duplicate the film roll rule
                      -- and change its mode to DT_MODE_COLLECT_MODE_OR
                      local newrule = dt.gui.libs.collect.new_rule ()
                      newrule.mode = "DT_LIB_COLLECT_MODE_AND"
                      newrule.data = "red"
                      newrule.item = "DT_COLLECTION_PROP_COLORLABEL"
                      local filters = dt.gui.libs.collect.filter ({})
                      local toggle = true
                      for _,filter in ipairs (filters) do
                         if filter.data == "red" then
                            print "tag already in filters"
                            -- Might need to delete filter from the list here
                            toggle = false
                            break
                         end
                      end
                      if toggle then
                         table.insert (filters, newrule)
                         dt.gui.libs.collect.filter (filters)
                      end
                      -- and move the call collect.filter here
                   end,
                   "Add red images to filters")

dt.register_event("shortcut",
                  function(event,shortcut)
                     local images = dt.gui.action_images
                     local t ={}
                     for _,v in ipairs(images) do
                        --s=(tostring (v))
                        s=(string.match (tostring (v), "%d%d%d%d%/%d%d/.+"))
                        s=(string.gsub (s, "CR2", "jpg"))
                        s=(string.gsub (s, "NEF", "jpg"))
                        s=(string.gsub (s, "JPG", "jpg"))
                        if (string.match (s, "%.gif"))
                        then
                           table.insert (t, 1, s)
                        else
                           t [#t+1]=s
                        end
                     end
                     --os.execute ("echo ".. (table.concat (t, "\n")))
                     print ("************************************************\n")
                     print (table.concat (t, "\n"))
                     dt.print ("Printed list of pics")
                  end,
                  "Print selected images")

dt.register_event("shortcut",
                  function(event,shortcut)
                     local images = dt.gui.action_images
                     local t ={}
                     for _,v in ipairs(images) do
                        --s=(tostring (v))
                        s=(string.match (tostring (v), "%d%d%d%d%/%d%d/.+"))
                        s=(string.gsub (s, "CR2", "jpg"))
                        s=(string.gsub (s, "NEF", "jpg"))
                        s=(string.gsub (s, "JPG", "jpg"))
                        if (string.match (s, "%.gif"))
                        then
                           table.insert (t, 1, s)
                        else
                           t [#t+1]=s
                        end
                     end
                     os.execute ("build-json -l \"".. (table.concat (t, " ")) .. "\" testfile")
                     print ("************************************************\n")
                     --print (table.concat (t, "\n"))
                     dt.print ("Printed list of pics")
                  end,
                  "Build json with selected images")

local bounce_buffer = {}
dt.register_event ("shortcut",
                   function ()
                      bounce_buffer = dt.gui.selection(bounce_buffer)
                   end,
                   "Switch current selection")

dt.register_event ("shortcut",
                   function ()
                      local selection = {}
                      for _,image in ipairs (dt.database) do
                         if image.red then
                            table.insert (selection, image)
                         end
                      end
                      dt.gui.selection (selection)
                   end,
                   "Select all red")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t1")
                   end,
                   "Add t1 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t2")
                   end,
                   "Add t2 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t3")
                   end,
                   "Add t3 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t4")
                   end,
                   "Add t4 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t5")
                   end,
                   "Add t5 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t6")
                   end,
                   "Add t6 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t7")
                   end,
                   "Add t7 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t8")
                   end,
                   "Add t8 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t9")
                   end,
                   "Add t9 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      add_tag_filter ("t10")
                   end,
                   "Add t10 filter")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t1")
                   end,
                   "Select all t1")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t2")
                   end,
                   "Select all t2")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t3")
                   end,
                   "Select all t3")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t4")
                   end,
                   "Select all t4")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t5")
                   end,
                   "Select all t5")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t6")
                   end,
                   "Select all t6")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t7")
                   end,
                   "Select all t7")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t8")
                   end,
                   "Select all t8")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t9")
                   end,
                   "Select all t9")

dt.register_event ("shortcut",
                   function (event,shortcut)
                      select_tag ("t10")
                   end,
                   "Select all t10")
